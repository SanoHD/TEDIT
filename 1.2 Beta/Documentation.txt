TextEDIT (tedit) by CMinusMinus
Version 1.2 (Beta)
=============== Full Documentation ===============

'LN' - Line number you want to change
'TEXT' - Text you want to enter

'+>' is the tedit command line prefix. Just ignore it.

------------------------------
>>> command in shell
+>  command in tedit
------------------------------

1: Open a file
	>>> tedit /my/path/myfile.txt
	* If myfile.txt exists, it opens it.
	* If myfile.txt not exists, it opens an empty file.
	* If you dont enter a filename, it opens an empty file, without
	  a filename. You have to enter it, when you want to save the file.

2. Edit a file
	2.1 Adding a new line
		2.1.1 Adding line to end
			+> + {TEXT}

		2.1.2 Adding line to begin
			+> ++ {TEXT}

		2.1.3 Adding line in the middle
			+> +* {LN} {TEXT}
				Example:
					[+* 4 Sentence in the middle of a text!] -> Inserts text 'Sentence in the...' to line 4

		2.1.4 Adding at the start of a line
			+> +< {LN} {TEXT}
				Example:
					[+< 2 'My new '] -> (line 2) line of text -> My new line of text

		2.1.5 Adding at the end of a line
			+> +> {LN} {TEXT}
				Example:
					[+> 2 ' with letters'] -> (line 2) line of text -> line of text with letters

		2.1.6 Adding to multiple lines
			2.1.6.1 Adding at the start of multiple lines
				+> *< {TEXT}

			2.1.6.2 Adding at the end of multiple lines
				+> *< {TEXT}

			In this case, [LN] can have many variations:
				Variation       Example         Explanation
				LN              5               Line 5
				LN:LN           3:5             Line 3 and 5
				LN-LN           3-5             Line 3, 4 and 5
				LN:LN-LN        2:5-7           Line 2, 5, 6 and 7

	2.2 Deleting a line
		2.2.1 Deleting last line
			+> -

		2.2.2 Deleting first line
			+> --

		2.2.3 Deleting line in the middle
			+> -* {LN}
				Example:
					[-* 4] -> Deletes line 4

		2.2.4 Deleting all empty lines
			+> ---

		2.2.5 Deleting first letter of a line
			+> -< {LN}

		2.2.6 Deleting last letter of a line
			+> -> {LN}
		

	2.3 Rewrite a line
		+> ! {LN} {TEXT}
			Example:
				[! 3 My new line!] -> Line 3 is now 'My new line!'

	2.4 Replace in line
		2.4.1 Dont ignore case (a != A)
			+> ? {LN} {TEXT} || {NEW-TEXT}
				Example:
					[? 3 OLD || NEW] -> (Line 3) My OLD text -> gets to -> my NEW text

		2.4.2 Ignore case (a = A)
			+> ?? {LN} {TEXT} || {NEW-TEXT}
				Example:
					[?? 3 old || NEW] -> (Line 3) My OLD text -> gets to -> my NEW text

	
3. Save a file
	3.1 Normal
		+> sv
		You have to confirm, that you want to save the file. To do so, choose (y).
		Choose (n) if you dont want to save the file. Choose (always) if you dont
		want to confirm every time you want to save the file.

	3.2 As new file
		+> sv my/new/path/myfile.txt
		To save the file as a new file, type [sv] followed by the new filename.
		If the file already exists, you also have to confirm here.

	When you opened a completely new file, by just typing in [tedit] without a filename,
	you have to enter a filename, when saving normal.

4. Other commands
	4.1 Find text
		4.1.1 Dont ignore case
			+> find {TEXT}
			colors every line with {TEXT} in it yellow.

		4.1.1 Ignore case
			+> find* {TEXT}
			colors every line with {TEXT} in it yellow. Ignores cases.
		 
